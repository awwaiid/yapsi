Yapsi Roadmap
-------------

Last updated: 2011-01-01

This roadmap deliberately limits itself by the horizons of the current
design. That is, it would certainly be possible to dream further than
this document does, but this document doesn't.

FUTURE
------

"FUTURE" is the name of an abstract syntax tree format for Yapsi. It's
almost, but not quite, entirely unlike PAST.

The current model for parsing is reaching its limits, and needs replacing
according to the ideas in
http://strangelyconsistent.org/blog/its-just-a-tree-silly -- basically, add
another compiler stage that manipulates trees:

    grammar parse/action methods
    traverse the tree
    FUTURE                        <--- new step
    SIC

This will allow for some syntactic sugar that is quite difficult to write
at the moment.

C backend
---------

It would be interesting to explore how fast a SIC *bytecode* interpreter
could be made to run. (SIC bytecode would simply be the textual SIC
instructions converted into a bytecode format.) The Perl 6 Yapsi runtime
isn't optimized to be fast, but this one could be.

Mid-term goals
--------------

+ named subs
+ &return
+ FIRST, LAST phasers
+ &last, &redo, &next (using control exceptions)
+ &return re-implemented using control exceptions
+ &die using control exceptions
+ INIT, END phasers
+ START phaser
+ ENTER, LEAVE/KEEP/UNDO phasers
+ PRE, POST phasers
+ CATCH, CONTROL phasers
